{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmkso\\\\Desktop\\\\411\\\\CS411B5Group7\\\\ChatGPTInsta\\\\src\\\\pages\\\\Login.page.js\",\n  _s = $RefreshSig$();\nimport { Button, TextField } from \"@mui/material\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../contexts/user.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Set user values here\n  const {\n    user,\n    fetchUser,\n    emailPasswordLogin\n  } = useContext(UserContext);\n\n  // This is to keep track of values in the form\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  // When the user edits the form, this gets called\n  const onFormInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n\n  // Redirection\n  const redirectNow = () => {\n    const redirectTo = location.search.replace(\"?redirectTo=\", \"\");\n    navigate(redirectTo ? redirectTo : \"/\");\n  };\n\n  // User login checker to make sure they go to the main page if they've already logged in\n  const loadUser = async () => {\n    if (!user) {\n      const fetchedUser = await fetchUser();\n      if (fetchedUser) {\n        redirectNow();\n      }\n    }\n  };\n\n  // Verification if user is logged in or not\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  // Function that gets called once user logs in\n  const onSubmit = async event => {\n    try {\n      // Validation of user credentials\n      const user = await emailPasswordLogin(form.email, form.password);\n      if (user) {\n        redirectNow();\n      }\n    } catch (error) {\n      if (error.statusCode === 401) {\n        alert(\"Invalid username/password. Try again!\");\n      } else {\n        alert(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      maxWidth: \"300px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login to the GPT-IG Suggester\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email address\",\n      type: \"email\",\n      variant: \"outlined\",\n      name: \"email\",\n      value: form.email,\n      onChange: onFormInputChange,\n      style: {\n        marginBottom: \"1rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      type: \"password\",\n      variant: \"outlined\",\n      name: \"password\",\n      value: form.password,\n      onChange: onFormInputChange,\n      style: {\n        marginBottom: \"1rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"success\",\n      onClick: onSubmit,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"New user? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"9gls2aPBNlz+Ik/BGlcmZOmn9qY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","TextField","useContext","useEffect","useState","Link","useLocation","useNavigate","UserContext","jsxDEV","_jsxDEV","Login","_s","navigate","location","user","fetchUser","emailPasswordLogin","form","setForm","email","password","onFormInputChange","event","name","value","target","redirectNow","redirectTo","search","replace","loadUser","fetchedUser","onSubmit","error","statusCode","alert","style","display","flexDirection","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","label","type","variant","onChange","marginBottom","color","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/tmkso/Desktop/411/CS411B5Group7/ChatGPTInsta/src/pages/Login.page.js"],"sourcesContent":["import { Button, TextField } from \"@mui/material\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { UserContext } from \"../contexts/user.context\";\r\n \r\nconst Login = () => {\r\n const navigate = useNavigate();\r\n const location = useLocation();\r\n \r\n // Set user values here\r\n const { user, fetchUser, emailPasswordLogin } = useContext(UserContext);\r\n \r\n // This is to keep track of values in the form\r\n const [form, setForm] = useState({\r\n   email: \"\",\r\n   password: \"\"\r\n });\r\n \r\n // When the user edits the form, this gets called\r\n const onFormInputChange = (event) => {\r\n   const { name, value } = event.target;\r\n   setForm({ ...form, [name]: value });\r\n };\r\n \r\n // Redirection\r\n const redirectNow = () => {\r\n   const redirectTo = location.search.replace(\"?redirectTo=\", \"\");\r\n   navigate(redirectTo ? redirectTo : \"/\");\r\n }\r\n \r\n // User login checker to make sure they go to the main page if they've already logged in\r\n const loadUser = async () => {\r\n   if (!user) {\r\n     const fetchedUser = await fetchUser();\r\n     if (fetchedUser) {\r\n        redirectNow();\r\n     }\r\n   }\r\n }\r\n \r\n // Verification if user is logged in or not\r\n useEffect(() => {\r\n   loadUser();\r\n }, []);\r\n \r\n // Function that gets called once user logs in\r\n const onSubmit = async (event) => {\r\n   try {\r\n     // Validation of user credentials\r\n     const user = await emailPasswordLogin(form.email, form.password);\r\n     if (user) {\r\n       redirectNow();\r\n     }\r\n   } catch (error) {\r\n       if (error.statusCode === 401) {\r\n          alert(\"Invalid username/password. Try again!\");\r\n      } else {\r\n          alert(error);\r\n      }\r\n \r\n   }\r\n };\r\n \r\n return <form style={{ display: \"flex\", flexDirection: \"column\", maxWidth: \"300px\", margin: \"auto\"}}>\r\n   <h1>Login to the GPT-IG Suggester</h1>\r\n   <TextField\r\n     label=\"Email address\"\r\n     type=\"email\"\r\n     variant=\"outlined\"\r\n     name=\"email\"\r\n     value={form.email}\r\n     onChange={onFormInputChange}\r\n     style={{ marginBottom: \"1rem\" }}\r\n   />\r\n   <TextField\r\n     label=\"Password\"\r\n     type=\"password\"\r\n     variant=\"outlined\"\r\n     name=\"password\"\r\n     value={form.password}\r\n     onChange={onFormInputChange}\r\n     style={{ marginBottom: \"1rem\" }}\r\n   />\r\n   <Button variant=\"contained\" color= \"success\" onClick={onSubmit}>\r\n     Login\r\n   </Button>\r\n   <p>New user? <Link to=\"/signup\">Signup</Link></p>\r\n </form>\r\n}\r\n \r\nexport default Login;"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACjD,SAASC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,SAASC,WAAW,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,QAAQ,GAAGR,WAAW,EAAE;;EAE9B;EACA,MAAM;IAAES,IAAI;IAAEC,SAAS;IAAEC;EAAmB,CAAC,GAAGf,UAAU,CAACM,WAAW,CAAC;;EAEvE;EACA,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC;IAC/BgB,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCP,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EACrC,CAAC;;EAED;EACA,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,UAAU,GAAGd,QAAQ,CAACe,MAAM,CAACC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;IAC9DjB,QAAQ,CAACe,UAAU,GAAGA,UAAU,GAAG,GAAG,CAAC;EACzC,CAAC;;EAED;EACA,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAAChB,IAAI,EAAE;MACT,MAAMiB,WAAW,GAAG,MAAMhB,SAAS,EAAE;MACrC,IAAIgB,WAAW,EAAE;QACdL,WAAW,EAAE;MAChB;IACF;EACF,CAAC;;EAED;EACAxB,SAAS,CAAC,MAAM;IACd4B,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,QAAQ,GAAG,MAAOV,KAAK,IAAK;IAChC,IAAI;MACF;MACA,MAAMR,IAAI,GAAG,MAAME,kBAAkB,CAACC,IAAI,CAACE,KAAK,EAAEF,IAAI,CAACG,QAAQ,CAAC;MAChE,IAAIN,IAAI,EAAE;QACRY,WAAW,EAAE;MACf;IACF,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZ,IAAIA,KAAK,CAACC,UAAU,KAAK,GAAG,EAAE;QAC3BC,KAAK,CAAC,uCAAuC,CAAC;MAClD,CAAC,MAAM;QACHA,KAAK,CAACF,KAAK,CAAC;MAChB;IAEH;EACF,CAAC;EAED,oBAAOxB,OAAA;IAAM2B,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAM,CAAE;IAAAC,QAAA,gBACjGhC,OAAA;MAAAgC,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtCpC,OAAA,CAACT,SAAS;MACR8C,KAAK,EAAC,eAAe;MACrBC,IAAI,EAAC,OAAO;MACZC,OAAO,EAAC,UAAU;MAClBzB,IAAI,EAAC,OAAO;MACZC,KAAK,EAAEP,IAAI,CAACE,KAAM;MAClB8B,QAAQ,EAAE5B,iBAAkB;MAC5Be,KAAK,EAAE;QAAEc,YAAY,EAAE;MAAO;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChC,eACFpC,OAAA,CAACT,SAAS;MACR8C,KAAK,EAAC,UAAU;MAChBC,IAAI,EAAC,UAAU;MACfC,OAAO,EAAC,UAAU;MAClBzB,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEP,IAAI,CAACG,QAAS;MACrB6B,QAAQ,EAAE5B,iBAAkB;MAC5Be,KAAK,EAAE;QAAEc,YAAY,EAAE;MAAO;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChC,eACFpC,OAAA,CAACV,MAAM;MAACiD,OAAO,EAAC,WAAW;MAACG,KAAK,EAAE,SAAS;MAACC,OAAO,EAAEpB,QAAS;MAAAS,QAAA,EAAC;IAEhE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACTpC,OAAA;MAAAgC,QAAA,GAAG,YAAU,eAAAhC,OAAA,CAACL,IAAI;QAACiD,EAAE,EAAC,SAAS;QAAAZ,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5C;AACR,CAAC;AAAAlC,EAAA,CAnFKD,KAAK;EAAA,QACOJ,WAAW,EACXD,WAAW;AAAA;AAAAiD,EAAA,GAFvB5C,KAAK;AAqFX,eAAeA,KAAK;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}