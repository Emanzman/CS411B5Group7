{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmkso\\\\Desktop\\\\411\\\\CS411B5Group7\\\\ChatGPTInsta\\\\src\\\\pages\\\\components\\\\UserInput.js\";\nimport React from 'react';\nimport './UserInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UserInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userTopic: null,\n      userCaptions: null,\n      userHashtags: null,\n      image: null\n    };\n    this.handleImageChange = this.handleImageChange.bind(this);\n  }\n  topicInput(input) {\n    this.setState({\n      userTopic: input.target.value\n    });\n  }\n  captionInput(input) {\n    this.setState({\n      userCaptions: input.target.value\n    });\n  }\n  hashtagInput(input) {\n    this.setState({\n      userHashtags: input.target.value\n    });\n  }\n  handleImageChange(event) {\n    const selectedImage = event.target.files[0];\n    const imageUrl = URL.createObjectURL(selectedImage);\n    this.setState({\n      image: imageUrl\n    });\n  }\n  async generateButton() {\n    console.log(\"generating...\");\n    try {\n      const response = await fetch('http://localhost:5000/generate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          topic: this.state.userTopic,\n          userHashtags: this.state.userHashtags\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        this.props.setCaption(data.title);\n        this.props.setTags(data.hashtags);\n      } else {\n        console.error(\"Error generating shit\", response.status);\n      }\n    } catch (error) {\n      console.error(\"error again gunna\", error);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed-banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: input => {\n          this.topicInput(input);\n        },\n        type: \"text\",\n        placeholder: \"Enter some of your previous post captions...\",\n        className: \"input-style\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: input => {\n          this.captionInput(input);\n        },\n        type: \"text\",\n        placeholder: \"(Optional) Type your post topic or description...\",\n        className: \"optional-style\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: input => {\n          this.hashtagInput(input);\n        },\n        type: \"text\",\n        placeholder: \"Type guaranteed hashtags...\",\n        className: \"shortInput-style\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: () => {\n          this.handleImageChange;\n          this.props.setImage(this.state.userHashtags);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), this.props.userHashtags, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.generateButton();\n          this.props.setCaption(this.state.userTopic);\n          this.props.setTags(this.state.userHashtags);\n        },\n        className: \"generate-button\",\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default UserInput;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UserInput","Component","constructor","props","state","userTopic","userCaptions","userHashtags","image","handleImageChange","bind","topicInput","input","setState","target","value","captionInput","hashtagInput","event","selectedImage","files","imageUrl","URL","createObjectURL","generateButton","console","log","response","fetch","method","headers","body","JSON","stringify","topic","ok","data","json","setCaption","title","setTags","hashtags","error","status","render","className","children","onChange","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","setImage","onClick"],"sources":["C:/Users/tmkso/Desktop/411/CS411B5Group7/ChatGPTInsta/src/pages/components/UserInput.js"],"sourcesContent":["import React from 'react';\r\nimport './UserInput.css'\r\n\r\nclass UserInput extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            userTopic : null,\r\n            userCaptions : null,\r\n            userHashtags : null,\r\n            image: null\r\n        }\r\n        this.handleImageChange = this.handleImageChange.bind(this);\r\n    }    \r\n\r\n    topicInput(input){\r\n        this.setState({userTopic : input.target.value})\r\n    }\r\n\r\n    captionInput(input){\r\n        this.setState({userCaptions : input.target.value})\r\n    }\r\n\r\n    hashtagInput(input){\r\n        this.setState({userHashtags : input.target.value})\r\n    }\r\n\r\n    handleImageChange(event) {\r\n        const selectedImage = event.target.files[0];\r\n        const imageUrl = URL.createObjectURL(selectedImage);\r\n        this.setState({ image: imageUrl });\r\n    }\r\n\r\n    async generateButton(){\r\n        console.log(\"generating...\");\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/generate', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    topic: this.state.userTopic,\r\n                    userHashtags: this.state.userHashtags\r\n                })\r\n            });\r\n            if(response.ok) {\r\n                const data = await response.json();\r\n                this.props.setCaption(data.title);\r\n                this.props.setTags(data.hashtags);\r\n            } else {\r\n                console.error(\"Error generating shit\", response.status);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"error again gunna\", error);\r\n        }\r\n    }\r\n      \r\n    render(){\r\n        return(\r\n        <div className=\"fixed-banner\">\r\n            <input onChange={(input)=>{this.topicInput(input)}} type=\"text\" placeholder=\"Enter some of your previous post captions...\" className=\"input-style\"/>\r\n            <input onChange={(input)=>{this.captionInput(input)}} type=\"text\" placeholder=\"(Optional) Type your post topic or description...\" className=\"optional-style\"/>\r\n            <input onChange={(input)=>{this.hashtagInput(input)}} type=\"text\" placeholder=\"Type guaranteed hashtags...\" className=\"shortInput-style\"/> \r\n\r\n            {/*<button onClick={(event)=>{this.uploadButton(event)}} className=\"upload-button\">Upload</button>*/}\r\n\r\n            \r\n            <input type=\"file\" onChange={()=>{\r\n                this.handleImageChange;\r\n                this.props.setImage(this.state.userHashtags);\r\n            }} />\r\n            \r\n            \r\n\r\n            {this.props.userHashtags}\r\n            <button onClick={()=>{\r\n                this.generateButton(); \r\n                this.props.setCaption(this.state.userTopic);\r\n                this.props.setTags(this.state.userHashtags);\r\n            }} className=\"generate-button\">Generate</button>\r\n        </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default UserInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}