[{"/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/index.js":"1","/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/reportWebVitals.js":"2","/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/App.js":"3","/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/contexts/user.context.js":"4","/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/pages/PrivateRoute.page.js":"5","/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/pages/Login.page.js":"6","/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/pages/Signup.page.js":"7","/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/pages/Home.page.js":"8","/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/realm/constants.js":"9","/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/pages/components/UserInput.js":"10","/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/pages/components/InstagramCard.js":"11"},{"size":535,"mtime":1680894511219,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1680894511231,"results":"14","hashOfConfig":"13"},{"size":741,"mtime":1680894511219,"results":"15","hashOfConfig":"13"},{"size":2194,"mtime":1680894511219,"results":"16","hashOfConfig":"13"},{"size":505,"mtime":1680894511220,"results":"17","hashOfConfig":"13"},{"size":2381,"mtime":1680894511220,"results":"18","hashOfConfig":"13"},{"size":1667,"mtime":1680894511220,"results":"19","hashOfConfig":"13"},{"size":1583,"mtime":1680894511220,"results":"20","hashOfConfig":"13"},{"size":45,"mtime":1680894511230,"results":"21","hashOfConfig":"13"},{"size":1693,"mtime":1680895897567,"results":"22","hashOfConfig":"13"},{"size":1433,"mtime":1680894511220,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fhu209",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/index.js",[],[],"/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/reportWebVitals.js",[],[],"/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/App.js",[],[],"/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/contexts/user.context.js",[],[],"/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/pages/PrivateRoute.page.js",[],[],"/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/pages/Login.page.js",["59"],[],"import { Button, TextField } from \"@mui/material\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../contexts/user.context\";\n \nconst Login = () => {\n const navigate = useNavigate();\n const location = useLocation();\n \n // Set user values here\n const { user, fetchUser, emailPasswordLogin } = useContext(UserContext);\n \n // This is to keep track of values in the form\n const [form, setForm] = useState({\n   email: \"\",\n   password: \"\"\n });\n \n // When the user edits the form, this gets called\n const onFormInputChange = (event) => {\n   const { name, value } = event.target;\n   setForm({ ...form, [name]: value });\n };\n \n // Redirection\n const redirectNow = () => {\n   const redirectTo = location.search.replace(\"?redirectTo=\", \"\");\n   navigate(redirectTo ? redirectTo : \"/\");\n }\n \n // User login checker to make sure they go to the main page if they've already logged in\n const loadUser = async () => {\n   if (!user) {\n     const fetchedUser = await fetchUser();\n     if (fetchedUser) {\n        redirectNow();\n     }\n   }\n }\n \n // Verification if user is logged in or not\n useEffect(() => {\n   loadUser();\n }, []);\n \n // Function that gets called once user logs in\n const onSubmit = async (event) => {\n   try {\n     // Validation of user credentials\n     const user = await emailPasswordLogin(form.email, form.password);\n     if (user) {\n       redirectNow();\n     }\n   } catch (error) {\n       if (error.statusCode === 401) {\n          alert(\"Invalid username/password. Try again!\");\n      } else {\n          alert(error);\n      }\n \n   }\n };\n \n return <form style={{ display: \"flex\", flexDirection: \"column\", maxWidth: \"300px\", margin: \"auto\"}}>\n   <h1>Login to the GPT-IG Suggester</h1>\n   <TextField\n     label=\"Email address\"\n     type=\"email\"\n     variant=\"outlined\"\n     name=\"email\"\n     value={form.email}\n     onChange={onFormInputChange}\n     style={{ marginBottom: \"1rem\" }}\n   />\n   <TextField\n     label=\"Password\"\n     type=\"password\"\n     variant=\"outlined\"\n     name=\"password\"\n     value={form.password}\n     onChange={onFormInputChange}\n     style={{ marginBottom: \"1rem\" }}\n   />\n   <Button variant=\"contained\" color= \"success\" onClick={onSubmit}>\n     Login\n   </Button>\n   <p>New user? <Link to=\"/signup\">Signup</Link></p>\n </form>\n}\n \nexport default Login;","/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/pages/Signup.page.js",[],[],"/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/pages/Home.page.js",[],[],"/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/realm/constants.js",[],[],"/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/pages/components/UserInput.js",["60","61"],[],"/Users/seth/Desktop/CS411B5Group7/ChatGPTInsta/src/pages/components/InstagramCard.js",["62","63","64","65","66","67","68","69"],[],"import React from \"react\";\nimport './instagramCard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart, faEllipsisH } from '@fortawesome/free-solid-svg-icons';\n\nimport profilePic from '../stockImages/Instagram.png';\nimport postPic from '../stockImages/Sunset Boat Florida Stock.png';\n\nclass InstagramCard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        }\n    }\n\n    render(){\n        return (\n            <div className=\"instagram-card\">\n                <div className=\"instagram-card-header\">\n                    <img src={profilePic} className=\"instagram-card-user-image\" alt=\"User Profile\"/>\n                    <a className=\"instagram-card-user-name\">theRealJohnSmith</a>\n                </div>\n\n                <div className=\"instagram-card-image\">\n                    <img src={postPic} alt=\"Post Image\" class=\"instagram-card-image\"/>\n                </div>\n\n                <div className=\"instagram-card-content\">\n                    <p className=\"likes\">Likes: ?</p>\n                    <p><a className=\"instagram-card-content-user\" >theRealJohnSmith</a> \n                    <a className=\"instagram-card-content-caption\" > {this.props.caption} </a>\n                    <a className=\"hashtag\">{this.props.tags}</a></p>\n                    \n                </div>\n\n            </div>\n        )\n    }\n}\n\n\nexport default InstagramCard",{"ruleId":"70","severity":1,"message":"71","line":44,"column":5,"nodeType":"72","endLine":44,"endColumn":7,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":7,"column":10,"nodeType":"76","messageId":"77","endLine":7,"endColumn":22},{"ruleId":"74","severity":1,"message":"78","line":8,"column":10,"nodeType":"76","messageId":"77","endLine":8,"endColumn":22},{"ruleId":"74","severity":1,"message":"79","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":25},{"ruleId":"74","severity":1,"message":"80","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":17},{"ruleId":"74","severity":1,"message":"81","line":4,"column":19,"nodeType":"76","messageId":"77","endLine":4,"endColumn":30},{"ruleId":"82","severity":1,"message":"83","line":21,"column":21,"nodeType":"84","endLine":21,"endColumn":61},{"ruleId":"85","severity":1,"message":"86","line":25,"column":21,"nodeType":"84","endLine":25,"endColumn":87},{"ruleId":"82","severity":1,"message":"83","line":30,"column":24,"nodeType":"84","endLine":30,"endColumn":68},{"ruleId":"82","severity":1,"message":"83","line":31,"column":21,"nodeType":"84","endLine":31,"endColumn":68},{"ruleId":"82","severity":1,"message":"83","line":32,"column":21,"nodeType":"84","endLine":32,"endColumn":44},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["87"],"no-unused-vars","'userCaptions' is assigned a value but never used.","Identifier","unusedVar","'userHashtags' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'faHeart' is defined but never used.","'faEllipsisH' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"desc":"88","fix":"89"},"Update the dependencies array to be: [loadUser]",{"range":"90","text":"91"},[1213,1215],"[loadUser]"]